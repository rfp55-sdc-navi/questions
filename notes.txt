Port Forwarding
sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3001

Dump
pg_dump -U some_user -W -f backup_file.sql -t some_table your_database

pg_dump -h localhost <db-name> | psql -U <superuser-name> -h <vm-public-ip-address> <db-name>


Log into postgresql in ubuntu
sudo -u postgres psql
postgres=#\passwordâ€‹

Install Node and Git on virtual instance
sudo apt-get update
sudo apt-get upgrade -y

Node js
curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
sudo apt-get install -y nodejs

Git
sudo apt-get install git

Start DB instance
3.141.44.68

Open an SSH client.
Locate your private key file. The key used to launch this instance is SDC.pem
Run this command, if necessary, to ensure your key is not publicly viewable.
 chmod 400 SDC.pem
Connect to your instance using its Public DNS:
 ec2-3-141-44-68.us-east-2.compute.amazonaws.com
Example:
 ssh -i "SDC.pem" ubuntu@ec2-3-141-44-68.us-east-2.compute.amazonaws.com


Start Server instance
3.22.164.57
Open an SSH client.
Locate your private key file. The key used to launch this instance is SDC-server.pem
Run this command, if necessary, to ensure your key is not publicly viewable.
 chmod 400 SDC-server.pem
Connect to your instance using its Public DNS:
 ec2-3-22-164-57.us-east-2.compute.amazonaws.com
Example:
 ssh -i "SDC-server.pem" ubuntu@ec2-3-22-164-57.us-east-2.compute.amazonaws.com

Git clone
git clone https://github.com/rfp55-sdc-navi/questions.git


IP address
http://3.22.164.57/qa/questions/330110/answers

Restart server and database IP address
Server IP address
http://3.22.164.57/qa/questions/330110/answers
http://18.222.90.65/qa/questions/330110/answers

Configg DB IP address

Port Forwarding
sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3001



vim configg.js

const config = {
  host: '3.19.74.253',
  database: 'qa',
  user: 'root',
  port: 5432,
  password: '123'
}

module.exports = config;


proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=10g
                 inactive=60m use_temp_path=off;
upstream sdcgroup {
  least_conn;
  keepalive 500;
  server 18.222.90.65:80;
  server 18.221.234.106:80;
}

server {
  listen 80 backlog=4096;
  gzip on;

  location / {
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_pass http://sdcgroup;

    proxy_cache my_cache;
    proxy_cache_valid any 10m;
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /loaderio-1bc3ea88d29496de4e135aa65cc6e0d9 {
    return 200 'loaderio-1bc3ea88d29496de4e135aa65cc6e0d9';
  }
}


const config = {
  host: '3.19.74.253',
  database: 'qa',
  user: 'root',
  port: 5432,
  password: '123'
}

module.exports = config;